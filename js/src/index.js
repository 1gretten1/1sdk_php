/**
 * one_msg_waba_sdk
 * [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter 'token' and always passed to query string (?token={your_token}). Parameters in GET queries pass query string. Parameters in POST requests — through the JSON-encoded request body.   All 'send' methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: hello@1msg.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Ack from './model/Ack';
import AddTemplateRequest from './model/AddTemplateRequest';
import ChannelExtendedStatistics from './model/ChannelExtendedStatistics';
import ChannelExtendedStatisticsInner from './model/ChannelExtendedStatisticsInner';
import ChannelStatistics from './model/ChannelStatistics';
import ChannelStatus from './model/ChannelStatus';
import ChatIdProp from './model/ChatIdProp';
import Commerce from './model/Commerce';
import CommerceParams from './model/CommerceParams';
import Contacts from './model/Contacts';
import ContactsContactsInner from './model/ContactsContactsInner';
import ContactsRequest from './model/ContactsRequest';
import GetAckInfo from './model/GetAckInfo';
import GetAckInfoHooksInner from './model/GetAckInfoHooksInner';
import GetCommerce from './model/GetCommerce';
import GetCommerceInner from './model/GetCommerceInner';
import GetIP from './model/GetIP';
import GetMe from './model/GetMe';
import GetMe401Response from './model/GetMe401Response';
import GetMessages from './model/GetMessages';
import GetMessagesMessagesInner from './model/GetMessagesMessagesInner';
import GetTemplates from './model/GetTemplates';
import GetTemplatesTemplatesInner from './model/GetTemplatesTemplatesInner';
import MeComponents from './model/MeComponents';
import MediaId from './model/MediaId';
import Message from './model/Message';
import MessageIdProp from './model/MessageIdProp';
import PhoneProp from './model/PhoneProp';
import ReadMessageRequest from './model/ReadMessageRequest';
import RemoveTemplateRequest from './model/RemoveTemplateRequest';
import SendContactRequest from './model/SendContactRequest';
import SendFileRequest from './model/SendFileRequest';
import SendListRequest from './model/SendListRequest';
import SendListRequestAllOfRows from './model/SendListRequestAllOfRows';
import SendListRequestAllOfSections from './model/SendListRequestAllOfSections';
import SendLocationRequest from './model/SendLocationRequest';
import SendMessageRequest from './model/SendMessageRequest';
import SendMessageStatus from './model/SendMessageStatus';
import SendProductRequest from './model/SendProductRequest';
import SendProductRequestAllOfAction from './model/SendProductRequestAllOfAction';
import SendProductRequestAllOfActionProductItems from './model/SendProductRequestAllOfActionProductItems';
import SendProductRequestAllOfActionSections from './model/SendProductRequestAllOfActionSections';
import SendTemplateRequest from './model/SendTemplateRequest';
import SendTemplateRequestAllOfCurrency from './model/SendTemplateRequestAllOfCurrency';
import SendTemplateRequestAllOfDateTime from './model/SendTemplateRequestAllOfDateTime';
import SendTemplateRequestAllOfDateTimeComponent from './model/SendTemplateRequestAllOfDateTimeComponent';
import SendTemplateRequestAllOfDateTimeUnixEpoch from './model/SendTemplateRequestAllOfDateTimeUnixEpoch';
import SendTemplateRequestAllOfLanguage from './model/SendTemplateRequestAllOfLanguage';
import SendTemplateRequestAllOfParams from './model/SendTemplateRequestAllOfParams';
import SetCommerce from './model/SetCommerce';
import SetMe from './model/SetMe';
import SetMeRequest from './model/SetMeRequest';
import SetSettings200Response from './model/SetSettings200Response';
import SetSettings200ResponseAllOfUpdate from './model/SetSettings200ResponseAllOfUpdate';
import SetWebhookStatus from './model/SetWebhookStatus';
import Settings from './model/Settings';
import TemplateCategoryProp from './model/TemplateCategoryProp';
import TemplateComponentsProp from './model/TemplateComponentsProp';
import TemplateComponentsPropInner from './model/TemplateComponentsPropInner';
import TemplateComponentsPropInnerButtonsInner from './model/TemplateComponentsPropInnerButtonsInner';
import TemplateLanguageProp from './model/TemplateLanguageProp';
import TemplateNamespaceField from './model/TemplateNamespaceField';
import UploadMedia from './model/UploadMedia';
import WebhookUrl from './model/WebhookUrl';
import ChannelApi from './api/ChannelApi';
import MediaApi from './api/MediaApi';
import MessagingApi from './api/MessagingApi';
import ProductsCatalogsApi from './api/ProductsCatalogsApi';
import TemplatesApi from './api/TemplatesApi';
import WebhooksApi from './api/WebhooksApi';


/**
* [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter &#39;token&#39; and always passed to query string (?token&#x3D;{your_token}). Parameters in GET queries pass query string. Parameters in POST requests — through the JSON-encoded request body.   All &#39;send&#39; methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var OneMsgWabaSdk = require('index'); // See note below*.
* var xxxSvc = new OneMsgWabaSdk.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new OneMsgWabaSdk.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new OneMsgWabaSdk.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new OneMsgWabaSdk.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.39.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Ack model constructor.
     * @property {module:model/Ack}
     */
    Ack,

    /**
     * The AddTemplateRequest model constructor.
     * @property {module:model/AddTemplateRequest}
     */
    AddTemplateRequest,

    /**
     * The ChannelExtendedStatistics model constructor.
     * @property {module:model/ChannelExtendedStatistics}
     */
    ChannelExtendedStatistics,

    /**
     * The ChannelExtendedStatisticsInner model constructor.
     * @property {module:model/ChannelExtendedStatisticsInner}
     */
    ChannelExtendedStatisticsInner,

    /**
     * The ChannelStatistics model constructor.
     * @property {module:model/ChannelStatistics}
     */
    ChannelStatistics,

    /**
     * The ChannelStatus model constructor.
     * @property {module:model/ChannelStatus}
     */
    ChannelStatus,

    /**
     * The ChatIdProp model constructor.
     * @property {module:model/ChatIdProp}
     */
    ChatIdProp,

    /**
     * The Commerce model constructor.
     * @property {module:model/Commerce}
     */
    Commerce,

    /**
     * The CommerceParams model constructor.
     * @property {module:model/CommerceParams}
     */
    CommerceParams,

    /**
     * The Contacts model constructor.
     * @property {module:model/Contacts}
     */
    Contacts,

    /**
     * The ContactsContactsInner model constructor.
     * @property {module:model/ContactsContactsInner}
     */
    ContactsContactsInner,

    /**
     * The ContactsRequest model constructor.
     * @property {module:model/ContactsRequest}
     */
    ContactsRequest,

    /**
     * The GetAckInfo model constructor.
     * @property {module:model/GetAckInfo}
     */
    GetAckInfo,

    /**
     * The GetAckInfoHooksInner model constructor.
     * @property {module:model/GetAckInfoHooksInner}
     */
    GetAckInfoHooksInner,

    /**
     * The GetCommerce model constructor.
     * @property {module:model/GetCommerce}
     */
    GetCommerce,

    /**
     * The GetCommerceInner model constructor.
     * @property {module:model/GetCommerceInner}
     */
    GetCommerceInner,

    /**
     * The GetIP model constructor.
     * @property {module:model/GetIP}
     */
    GetIP,

    /**
     * The GetMe model constructor.
     * @property {module:model/GetMe}
     */
    GetMe,

    /**
     * The GetMe401Response model constructor.
     * @property {module:model/GetMe401Response}
     */
    GetMe401Response,

    /**
     * The GetMessages model constructor.
     * @property {module:model/GetMessages}
     */
    GetMessages,

    /**
     * The GetMessagesMessagesInner model constructor.
     * @property {module:model/GetMessagesMessagesInner}
     */
    GetMessagesMessagesInner,

    /**
     * The GetTemplates model constructor.
     * @property {module:model/GetTemplates}
     */
    GetTemplates,

    /**
     * The GetTemplatesTemplatesInner model constructor.
     * @property {module:model/GetTemplatesTemplatesInner}
     */
    GetTemplatesTemplatesInner,

    /**
     * The MeComponents model constructor.
     * @property {module:model/MeComponents}
     */
    MeComponents,

    /**
     * The MediaId model constructor.
     * @property {module:model/MediaId}
     */
    MediaId,

    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message,

    /**
     * The MessageIdProp model constructor.
     * @property {module:model/MessageIdProp}
     */
    MessageIdProp,

    /**
     * The PhoneProp model constructor.
     * @property {module:model/PhoneProp}
     */
    PhoneProp,

    /**
     * The ReadMessageRequest model constructor.
     * @property {module:model/ReadMessageRequest}
     */
    ReadMessageRequest,

    /**
     * The RemoveTemplateRequest model constructor.
     * @property {module:model/RemoveTemplateRequest}
     */
    RemoveTemplateRequest,

    /**
     * The SendContactRequest model constructor.
     * @property {module:model/SendContactRequest}
     */
    SendContactRequest,

    /**
     * The SendFileRequest model constructor.
     * @property {module:model/SendFileRequest}
     */
    SendFileRequest,

    /**
     * The SendListRequest model constructor.
     * @property {module:model/SendListRequest}
     */
    SendListRequest,

    /**
     * The SendListRequestAllOfRows model constructor.
     * @property {module:model/SendListRequestAllOfRows}
     */
    SendListRequestAllOfRows,

    /**
     * The SendListRequestAllOfSections model constructor.
     * @property {module:model/SendListRequestAllOfSections}
     */
    SendListRequestAllOfSections,

    /**
     * The SendLocationRequest model constructor.
     * @property {module:model/SendLocationRequest}
     */
    SendLocationRequest,

    /**
     * The SendMessageRequest model constructor.
     * @property {module:model/SendMessageRequest}
     */
    SendMessageRequest,

    /**
     * The SendMessageStatus model constructor.
     * @property {module:model/SendMessageStatus}
     */
    SendMessageStatus,

    /**
     * The SendProductRequest model constructor.
     * @property {module:model/SendProductRequest}
     */
    SendProductRequest,

    /**
     * The SendProductRequestAllOfAction model constructor.
     * @property {module:model/SendProductRequestAllOfAction}
     */
    SendProductRequestAllOfAction,

    /**
     * The SendProductRequestAllOfActionProductItems model constructor.
     * @property {module:model/SendProductRequestAllOfActionProductItems}
     */
    SendProductRequestAllOfActionProductItems,

    /**
     * The SendProductRequestAllOfActionSections model constructor.
     * @property {module:model/SendProductRequestAllOfActionSections}
     */
    SendProductRequestAllOfActionSections,

    /**
     * The SendTemplateRequest model constructor.
     * @property {module:model/SendTemplateRequest}
     */
    SendTemplateRequest,

    /**
     * The SendTemplateRequestAllOfCurrency model constructor.
     * @property {module:model/SendTemplateRequestAllOfCurrency}
     */
    SendTemplateRequestAllOfCurrency,

    /**
     * The SendTemplateRequestAllOfDateTime model constructor.
     * @property {module:model/SendTemplateRequestAllOfDateTime}
     */
    SendTemplateRequestAllOfDateTime,

    /**
     * The SendTemplateRequestAllOfDateTimeComponent model constructor.
     * @property {module:model/SendTemplateRequestAllOfDateTimeComponent}
     */
    SendTemplateRequestAllOfDateTimeComponent,

    /**
     * The SendTemplateRequestAllOfDateTimeUnixEpoch model constructor.
     * @property {module:model/SendTemplateRequestAllOfDateTimeUnixEpoch}
     */
    SendTemplateRequestAllOfDateTimeUnixEpoch,

    /**
     * The SendTemplateRequestAllOfLanguage model constructor.
     * @property {module:model/SendTemplateRequestAllOfLanguage}
     */
    SendTemplateRequestAllOfLanguage,

    /**
     * The SendTemplateRequestAllOfParams model constructor.
     * @property {module:model/SendTemplateRequestAllOfParams}
     */
    SendTemplateRequestAllOfParams,

    /**
     * The SetCommerce model constructor.
     * @property {module:model/SetCommerce}
     */
    SetCommerce,

    /**
     * The SetMe model constructor.
     * @property {module:model/SetMe}
     */
    SetMe,

    /**
     * The SetMeRequest model constructor.
     * @property {module:model/SetMeRequest}
     */
    SetMeRequest,

    /**
     * The SetSettings200Response model constructor.
     * @property {module:model/SetSettings200Response}
     */
    SetSettings200Response,

    /**
     * The SetSettings200ResponseAllOfUpdate model constructor.
     * @property {module:model/SetSettings200ResponseAllOfUpdate}
     */
    SetSettings200ResponseAllOfUpdate,

    /**
     * The SetWebhookStatus model constructor.
     * @property {module:model/SetWebhookStatus}
     */
    SetWebhookStatus,

    /**
     * The Settings model constructor.
     * @property {module:model/Settings}
     */
    Settings,

    /**
     * The TemplateCategoryProp model constructor.
     * @property {module:model/TemplateCategoryProp}
     */
    TemplateCategoryProp,

    /**
     * The TemplateComponentsProp model constructor.
     * @property {module:model/TemplateComponentsProp}
     */
    TemplateComponentsProp,

    /**
     * The TemplateComponentsPropInner model constructor.
     * @property {module:model/TemplateComponentsPropInner}
     */
    TemplateComponentsPropInner,

    /**
     * The TemplateComponentsPropInnerButtonsInner model constructor.
     * @property {module:model/TemplateComponentsPropInnerButtonsInner}
     */
    TemplateComponentsPropInnerButtonsInner,

    /**
     * The TemplateLanguageProp model constructor.
     * @property {module:model/TemplateLanguageProp}
     */
    TemplateLanguageProp,

    /**
     * The TemplateNamespaceField model constructor.
     * @property {module:model/TemplateNamespaceField}
     */
    TemplateNamespaceField,

    /**
     * The UploadMedia model constructor.
     * @property {module:model/UploadMedia}
     */
    UploadMedia,

    /**
     * The WebhookUrl model constructor.
     * @property {module:model/WebhookUrl}
     */
    WebhookUrl,

    /**
    * The ChannelApi service constructor.
    * @property {module:api/ChannelApi}
    */
    ChannelApi,

    /**
    * The MediaApi service constructor.
    * @property {module:api/MediaApi}
    */
    MediaApi,

    /**
    * The MessagingApi service constructor.
    * @property {module:api/MessagingApi}
    */
    MessagingApi,

    /**
    * The ProductsCatalogsApi service constructor.
    * @property {module:api/ProductsCatalogsApi}
    */
    ProductsCatalogsApi,

    /**
    * The TemplatesApi service constructor.
    * @property {module:api/TemplatesApi}
    */
    TemplatesApi,

    /**
    * The WebhooksApi service constructor.
    * @property {module:api/WebhooksApi}
    */
    WebhooksApi
};
