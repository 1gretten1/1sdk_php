<?php
/**
 * TemplateLanguageProp
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * one_msg_waba_sdk
 *
 * [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter 'token' and always passed to query string (?token={your_token}). Parameters in GET queries pass query string. Parameters in POST requests — through the JSON-encoded request body.   All 'send' methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: hello@1msg.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * TemplateLanguageProp Class Doc Comment
 *
 * @category Class
 * @description Template language
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TemplateLanguageProp
{
    /**
     * Possible values of this enum
     */
    public const AF = 'af';

    public const SQ = 'sq';

    public const AR = 'ar';

    public const AZ = 'az';

    public const BN = 'bn';

    public const BG = 'bg';

    public const CA = 'ca';

    public const ZH_CN = 'zh_CN';

    public const ZH_HK = 'zh_HK';

    public const ZH_TW = 'zh_TW';

    public const HR = 'hr';

    public const CS = 'cs';

    public const DA = 'da';

    public const NL = 'nl';

    public const EN = 'en';

    public const EN_GB = 'en_GB';

    public const EN_US = 'en_US';

    public const ET = 'et';

    public const FIL = 'fil';

    public const FI = 'fi';

    public const FR = 'fr';

    public const DE = 'de';

    public const EL = 'el';

    public const GU = 'gu';

    public const HE = 'he';

    public const HI = 'hi';

    public const HU = 'hu';

    public const ID = 'id';

    public const GA = 'ga';

    public const IT = 'it';

    public const JA = 'ja';

    public const KN = 'kn';

    public const KK = 'kk';

    public const KO = 'ko';

    public const LO = 'lo';

    public const LV = 'lv';

    public const LT = 'lt';

    public const MK = 'mk';

    public const MS = 'ms';

    public const MR = 'mr';

    public const NB = 'nb';

    public const FA = 'fa';

    public const PL = 'pl';

    public const PT_BR = 'pt_BR';

    public const PT_PT = 'pt_PT';

    public const PA = 'pa';

    public const RO = 'ro';

    public const RU = 'ru';

    public const SR = 'sr';

    public const SK = 'sk';

    public const SL = 'sl';

    public const ES = 'es';

    public const ES_AR = 'es_AR';

    public const ES_ES = 'es_ES';

    public const ES_MX = 'es_MX';

    public const SW = 'sw';

    public const SV = 'sv';

    public const TA = 'ta';

    public const TE = 'te';

    public const TH = 'th';

    public const TR = 'tr';

    public const UK = 'uk';

    public const UR = 'ur';

    public const UZ = 'uz';

    public const VI = 'vi';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::AF,
            self::SQ,
            self::AR,
            self::AZ,
            self::BN,
            self::BG,
            self::CA,
            self::ZH_CN,
            self::ZH_HK,
            self::ZH_TW,
            self::HR,
            self::CS,
            self::DA,
            self::NL,
            self::EN,
            self::EN_GB,
            self::EN_US,
            self::ET,
            self::FIL,
            self::FI,
            self::FR,
            self::DE,
            self::EL,
            self::GU,
            self::HE,
            self::HI,
            self::HU,
            self::ID,
            self::GA,
            self::IT,
            self::JA,
            self::KN,
            self::KK,
            self::KO,
            self::LO,
            self::LV,
            self::LT,
            self::MK,
            self::MS,
            self::MR,
            self::NB,
            self::FA,
            self::PL,
            self::PT_BR,
            self::PT_PT,
            self::PA,
            self::RO,
            self::RU,
            self::SR,
            self::SK,
            self::SL,
            self::ES,
            self::ES_AR,
            self::ES_ES,
            self::ES_MX,
            self::SW,
            self::SV,
            self::TA,
            self::TE,
            self::TH,
            self::TR,
            self::UK,
            self::UR,
            self::UZ,
            self::VI
        ];
    }
}


